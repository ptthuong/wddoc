<?
command = docfile.javadoc[0];
description = command.description.replace(/(\[([^\]]+)\]\(([^\)]+)\))/ig, '$2').slice(0, 145).replace(/\n/g,' ');

if(command.description.length > 145) {
    description = description.split(/\s/);
    description.pop();
    description = description.join(' ') + ' ...';
}
description = description.replace(/(<([^>]+)>)/ig, ' $2 ').replace(/`/g, '').replace(/"/g, '\\"').replace(/\s+/g, ' ').trim();
?>name: <?= docfile.filename.slice(0,-3) ?>
category: <?= command.type ?>
tags: api
title: WebdriverIO - <?= docfile.filename.slice(0,-3) ?>
description: "<?= description ?>"
---

# <?= docfile.filename.slice(0,-3) ?>

<?= command.description ?>

### Usage

```js
browser.<?= docfile.filename.slice(0,-3) ?>(<?= command.paramStr ?>);
```

<? if (command.paramTags.length) { ?>
### Parameters

| Param | Type | Details |
| ----- | ---- | ------- |
<? command.paramTags.forEach(function(paramTag) { ?>| <?= paramTag.name.replace(/\[|\]/g,'') ?><? if (paramTag.joinedTypes.indexOf('=') > -1) { ?><br><span class="label label-warning">optional</span><? } ?> | <?= paramTag.joinedTypes.replace('=','').replace(/[|\/]/g,'/') ?> | <?= paramTag.description ?> |
<? }) ?>
<? } ?>

<? if (command.examples.length) { ?>
### Example
<? command.examples.forEach(function(example) { ?>
``` <?= example.format ?> <?= example.file ?>
<?= example.code ?>
```
<? }); ?>
<? } ?>

<? if (command.returnTags.length) { ?>
### Returns

<? command.returnTags.forEach(function(returnTag) { ?>- **&lt;<?= returnTag.joinedTypes.replace('=','').replace(/[|\/]/g,'/') ?>&gt;**: <?= returnTag.description ?>
<? }) ?>
<? } ?>

<? if (command.throwsTags.length) { ?>
### Throws

<? command.throwsTags.forEach(function(throwsTag) { ?>- **<?= throwsTag.joinedTypes.replace('=','').replace(/[|\/]/g,'/') ?>**: <?= throwsTag.description ?>
<? }) ?>
<? } ?>

<? mobileSupport = command.raw.tags.filter(function(raw){ return raw.type === 'for' }); ?>
<? mobileSupport = mobileSupport.length ? mobileSupport[0].string.split(',') : null ?>
<? if (mobileSupport && mobileSupport.length > 0) { ?>
    ### Support
    <? mobileSupport = mobileSupport.map(function(os) { return '![Support for ' + os.trim() + '](/images/icons/' + os.trim() + '.svg "' + os.trim() + '")'; }) ?>
    <?= mobileSupport.join(' ') ?>
<? } ?>

<? tag  = command.raw.tags.filter(function(raw){ return raw.type === 'uses' }); ?>
<? uses = tag.length ? tag[0].string.split(',') : null ?>
<? if (uses && uses.length > 0) { ?>
    ### Uses
    <? uses.forEach(function(command) { ?>* [<?= command.trim() ?>](/api/<?= command.trim() ?>.html)
    <? }) ?>
<? } ?>
